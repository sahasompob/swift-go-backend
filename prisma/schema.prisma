generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  createdAt DateTime  @default(now())
  password  String
  role      UserRole  @default(CUSTOMER)
  customer  Customer?
  driver    Driver?
  Post      Post[]
}

model Customer {
  id       Int       @id @default(autoincrement())
  userId   Int       @unique
  name     String
  phone    String    @unique
  bookings Booking[]
  user     User      @relation(fields: [userId], references: [id])
}

model Driver {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  name      String
  licenseNo String
  bookings  Booking[]
  user      User      @relation(fields: [userId], references: [id])
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  authorId  Int
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
}

model Vehicle {
  id        Int       @id @default(autoincrement())
  name      String
  capacity  Int
  imageUrl  String?
  prices    Price[]
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
}

model Price {
  id         Int     @id @default(autoincrement())
  vehicleId  Int
  minKm      Float
  maxKm      Float
  basePrice  Float
  pricePerKm Float
  vehicle    Vehicle @relation(fields: [vehicleId], references: [id])
}

model Booking {
  id          Int           @id @default(autoincrement())
  customerId  Int
  vehicleId   Int
  driverId    Int?
  fromAddress String
  toAddress   String
  distanceKm  Float
  totalPrice  Float
  status      BookingStatus @default(PENDING)
  createdAt   DateTime      @default(now())
  customer    Customer      @relation(fields: [customerId], references: [id])
  vehicle     Vehicle       @relation(fields: [vehicleId], references: [id])
  driver      Driver?       @relation(fields: [driverId], references: [id])
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}

enum UserRole {
  ADMIN
  CUSTOMER
  DRIVER
}
